#!/bin/bash

# This script sends text to Yellow Butler service, asking to notify administrator
#
# Required files
# /etc/rainbowscripts/notifyadmin.conf
#  Store configurations for yellow butler call, like the API key and the address of the server
#
#
# Part of the RainbowScripts suite


# Show a message
output_message() {
  echo ${1}
}

# Set a variable if not already set
variable_set() {
  local variable="${1}"
  local value="${2}"
  if [ -z "${!variable}" ]; then
    eval "${variable}=\"${value}\""
  fi
}

# Set default vars
variables_set_defaults() {
	variable_set "config_file" "/etc/rainbowscripts/notifyadmin.conf"
}

# Check for the presence of the config file
check_for_config_file() {
  local config_found=0

  if [ -f ${config_file} ]; then
  	. ${config_file}
	config_found=1
  fi

  # Workaroud for local execution of the script
  if [ -f ./conf/debug-rainbowscripts.conf ]; then
    . debug-rainbowscripts.conf
	 config_found=1
  fi

  if [ ${config_found} -eq 0 ]; then
    output_message "Config file not found. Default file is ${config_file}"
	exit 1
  fi
}

check_for_required_vars () {
  if [ -z "${api_key}" ]; then
    output_message "api_key not found. Please check config file at ${config_file}"
	exit 2
  fi

  if [ -z "${server_address}" ]; then
    output_message "server_address not found. Please check config file at ${config_file}"
    exit 2
  fi

  if [ -z "${host_name}" ]; then
    output_message "host_name not found. Please check config file at ${config_file}"
	exit 2
  fi

  if [ -z "${message}" ]; then
    output_message "message not found. Please specify it as the first command line argument"
	exit 2
  fi
}


variables_set_defaults
check_for_config_file

# Check for the esistence of a command line argument
if [ -z "$1" ]; then
  # read from STDIN, and the text can be piped
  # echo "Message to send" | thisscript

  # Read the first line
  read -r message
  # then read the others, attaching a \n only from the second ongoing
  while read -r line; do
	message="${message}\n${line}"
  done
else
  #read the first commmand line argument
  variable_set "message" "$1"
fi

check_for_required_vars

message="${host_name}: ${message}"
curl -X POST ${server_address} -H "X-Authorization:${api_key}" -H "Content-Type: application/json" -d "{\"intent\":\"notify_admin\", \"params\":{\"message\":\"${message}\"}}"
